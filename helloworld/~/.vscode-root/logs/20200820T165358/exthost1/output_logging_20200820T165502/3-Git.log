Looking for git in: git
Using git 2.25.1 from git
> git rev-parse --git-dir
Open repository: /home/wafer/Documents/Projects
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git show --textconv :helloworld/.vscode/tasks.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :helloworld/.vscode/tasks.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :helloworld/.vscode/tasks.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git show --textconv :helloworld/.vscode/tasks.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git show --textconv :helloworld/.vscode/tasks.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git show --textconv HEAD:helloworld/~/.vscode-root/CachedData/db40434f562994116e5b21c24015a2e40b2504e6/HttpRequests-4ec87179dee62d33d48aff870df206c9.code
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/~/.vscode-root/CachedData/db40434f562994116e5b21c24015a2e40b2504e6/HttpRequests-4ec87179dee62d33d48aff870df206c9.code
fatal: Not a valid object name HEAD
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/~/.vscode-root/CachedData/db40434f562994116e5b21c24015a2e40b2504e6/HttpRequests-4ec87179dee62d33d48aff870df206c9.code
fatal: Not a valid object name HEAD
> git check-ignore -v -z --stdin
> git show --textconv HEAD:tunnel.py
> git show --textconv :tunnel.py
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/tunnel.py
> git ls-files --stage -- /home/wafer/Documents/Projects/tunnel.py
fatal: Not a valid object name HEAD
> git cat-file -s 1e7211f3b38dac71b6225e734b7a541ada13f457
> git check-ignore -v -z --stdin
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/tunnel.py
> git ls-files --stage -- /home/wafer/Documents/Projects/tunnel.py
fatal: Not a valid object name HEAD
> git cat-file -s 1e7211f3b38dac71b6225e734b7a541ada13f457
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/tunnel.py
> git ls-files --stage -- /home/wafer/Documents/Projects/tunnel.py
fatal: Not a valid object name HEAD
> git cat-file -s 1e7211f3b38dac71b6225e734b7a541ada13f457
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git show --textconv :helloworld/.vscode/tasks.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git show --textconv HEAD:helloworld/.vscode/tasks.json
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
fatal: Not a valid object name HEAD
> git show --textconv HEAD:helloworld/hello.c
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/hello.c
fatal: Not a valid object name HEAD
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
fatal: Not a valid object name HEAD
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/hello.c
fatal: Not a valid object name HEAD
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
fatal: Not a valid object name HEAD
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git show --textconv HEAD:helloworld/hello.c
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/hello.c
fatal: Not a valid object name HEAD
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git ls-tree -l HEAD -- /home/wafer/Documents/Projects/helloworld/hello.c
fatal: Not a valid object name HEAD
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --sort -committerdate --format %(refname) %(objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git show --textconv :helloworld/.vscode/tasks.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
> git show --textconv :helloworld/.vscode/launch.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/launch.json
> git show --textconv :helloworld/.vscode/tasks.json
> git ls-files --stage -- /home/wafer/Documents/Projects/helloworld/.vscode/tasks.json
